
typedef  unsigned char BYTE;
const BYTE COLOR_STRIP[8]={
	/*WHITE*/			0x8,
	/*YELLOW*/			0x3,
	/*CAMBRIDGE_BLUE*/	0x9,
	/*GREEN*/			0x5,
	/*PINK*/			0xa,
	/*RED*/				0x6,
	/*DARK_BLUE*/		0xc,
	/*BLACK*/			0x8
};



#ifndef _detect_type_
#define _detect_type_

typedef long DETECT_TYPE;
#define	DETECT_TYPE_BLACK_SCENE				0x00000001L
#define	DETECT_TYPE_COLOR_STRIP				0x00000002L
#define	DETECT_TYPE_COLOR_SCENE				0x00000004L
#define	DETECT_TYPE_STATIC_FRAME			0x00000008L
#define DETECT_TYPE_MOSAIC                  0x00000010L//zibj 2011.7.1 马赛克
#define DETECT_TYPE_COLOR_CAST              0x00000020L//zibj 2011.7.1 偏色

#define DETECT_TYPE_AUDIO_LOW				0x00010000L	
#define DETECT_TYPE_AUDIO_MUTE		0x00020000L
#define DETECT_TYPE_AUDIO_HIGH				0x00040000L
#define DETECT_TYPE_LOUDNESS_LOW            0x00080000L//zibj 2011.7.1 响度过低
#define DETECT_TYPE_LOUDNESS_HIGH           0x00100000L//zibj 2011.7.1 响度过高
#endif
//#define EqualPixel(x,y)						( (x^y)&0xf0f0 ? FALSE : TRUE )
#define EqualPixel(x,y,z)						(abs(BYTE((x&0xff00)>>8)-BYTE((y&0xff00)>>8))<=z && abs(BYTE(x&0x00ff)-BYTE(y&0x00ff))<=z ? TRUE : FALSE )

#define Audio_BitMask(bps)  ((LONGLONG(1) << (bps)) - 1 )
#define Audio_MaxValue(bps)	((LONGLONG(1) << (bps-1)) - 1)
#define Audio_absll(__val,__len,__msk) ((((__val) >> ((__len)-1)) & 1) ? ((~((__val)-1)) & (__msk)) : (__val))


enum PARAM_INDEX{
	PARAM_YUV_FORMAT = 1,
	PARAM_CLIP_WIDTH,
	PARAM_CLIP_HEIGHT,
	PARAM_TOP_SECURE_SECTION,
	PARAM_BOTTOM_SECURE_SECTION,
	PARAM_LEFT_SECURE_SECTION,
	PARAM_RIGHT_SECURE_SECTION,
	PARAM_BLACK_SCENE_THRESHOLD,
	PARAM_COLOR_SCENE_PERCENTAGE,
	PARAM_COLOR_STRIP_PERCENTAGE,
	PARAM_STATIC_FRAME_PERCENTAGE,
	PARAM_LINE_COUNTS_FOR_STRIP_DETECT,
	PARAM_AMBIT_DEEMED_TO_SAME_PIXEL,
	PARAM_UNDULATE_AMBIT_OF_Y,
	PARAM_UNDULATE_AMBIT_OF_U,
	PARAM_UNDULATE_AMBIT_OF_V,
	PARAM_AUDIO_LOW_THRESHOLD,
	PARAM_AUDIO_LOW_PERIOD,
	PARAM_AUDIO_HIGH_THRESHOLD,
	PARAM_AUDIO_HIGH_PERIOD,
	PARAM_AUDIO_MUTE_THRESHOLD,
	PARAM_AUDIO_MUTE_PERIOD,
	PARAM_LOUDNESS_LOW_THRESHOLD, 
	PARAM_LOUDNESS_HIGH_THRESHOLD, 
};
enum _YUV_FORMAT{
	YUV_FORMAT_NULL = 0,
	YUV_FORMAT_YUY2 ,
	YUV_FORMAT_YV12	
};